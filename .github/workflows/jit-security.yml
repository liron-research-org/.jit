name: Workflows generated by the MVS plan
on:
  workflow_dispatch:
    inputs:
       client_payload:
          description: The Client payload
          required: true

permissions:
  contents: read
  id-token: write

jobs:
  enrich:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'enrich' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-enrichment-code'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: enrichment
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/control-enrichment-slim:main
        
  remediation-pr:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'remediation-pr' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-remediation-pr'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: remediation-pr
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/open-remediation-pr-alpine:main
        security_control_output_file: /opt/code/jit-report/results.json
        
  secret-detection:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'secret-detection' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-secret-detection'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: trufflehog
      uses: jitsecurity-controls/jit-github-action@v3.0.1
      with:
        security_control: registry.jit.io/control-trufflehog-alpine:not-hardened-sc-20166-research-and-integrate-trufflehog
        runner_setup: ${{toJSON(fromJSON(github.event.inputs.client_payload).context.job.runner.setup)}}
        
  static-code-analysis-csharp:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-csharp' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-sast'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: semgrep
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/control-semgrep-alpine:main
        
  static-code-analysis-go:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-go' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-sast'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: gosec
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/control-gosec-alpine:main
        
  static-code-analysis-java:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-java' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-sast'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: semgrep
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/control-semgrep-alpine:main
        
  static-code-analysis-js:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-js' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-sast'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: semgrep
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/control-semgrep-alpine:main
        
  static-code-analysis-kotlin:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-kotlin' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-sast'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: semgrep
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/control-semgrep-alpine:main
        
  static-code-analysis-php:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-php' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-sast'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: semgrep
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/control-semgrep-alpine:main
        
  static-code-analysis-python-semgrep:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-python-semgrep' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-sast'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: semgrep
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/control-semgrep-alpine:main
        
  static-code-analysis-rust:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-rust' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-sast'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: semgrep
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/control-semgrep-alpine:main
        
  static-code-analysis-scala:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-scala' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-sast'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: semgrep
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/control-semgrep-alpine:main
        
  static-code-analysis-swift:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'static-code-analysis-swift' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-sast'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: semgrep
      uses: jitsecurity-controls/jit-github-action@v4.0.1
      with:
        security_control: registry.jit.io/control-semgrep-alpine:main
  trufflehog-secret-detection:
    if: fromJSON(github.event.inputs.client_payload).payload.workflow_job_name == 'trufflehog-secret-detection' && fromJSON(github.event.inputs.client_payload).payload.workflow_slug == 'workflow-secret-detection'
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
    - name: trufflehog
      uses: jitsecurity-controls/jit-github-action@v3.0.1
      with:
        security_control: registry.jit.io/control-trufflehog-alpine:not-hardened-sc-20166-research-and-integrate-trufflehog
        runner_setup: ${{toJSON(fromJSON(github.event.inputs.client_payload).context.job.runner.setup)}}
        
